/* eslint-disable */
// @generated by protobuf-ts 2.9.4 with parameter eslint_disable
// @generated from protobuf file "example.proto" (package "example", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { Example } from "./example";
import type { ServerStreamingCall } from "@protobuf-ts/runtime-rpc";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { ExampleReply } from "./example";
import type { ExampleRequest } from "./example";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service example.Example
 */
export interface IExampleClient {
    /**
     * @generated from protobuf rpc: ExampleUnaryCall(example.ExampleRequest) returns (example.ExampleReply);
     */
    exampleUnaryCall(input: ExampleRequest, options?: RpcOptions): UnaryCall<ExampleRequest, ExampleReply>;
    /**
     * @generated from protobuf rpc: ExampleStreamingCall(example.ExampleRequest) returns (stream example.ExampleReply);
     */
    exampleStreamingCall(input: ExampleRequest, options?: RpcOptions): ServerStreamingCall<ExampleRequest, ExampleReply>;
}
/**
 * @generated from protobuf service example.Example
 */
export class ExampleClient implements IExampleClient, ServiceInfo {
    typeName = Example.typeName;
    methods = Example.methods;
    options = Example.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: ExampleUnaryCall(example.ExampleRequest) returns (example.ExampleReply);
     */
    exampleUnaryCall(input: ExampleRequest, options?: RpcOptions): UnaryCall<ExampleRequest, ExampleReply> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<ExampleRequest, ExampleReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ExampleStreamingCall(example.ExampleRequest) returns (stream example.ExampleReply);
     */
    exampleStreamingCall(input: ExampleRequest, options?: RpcOptions): ServerStreamingCall<ExampleRequest, ExampleReply> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<ExampleRequest, ExampleReply>("serverStreaming", this._transport, method, opt, input);
    }
}
